
#CAS Config
#security.cas.casServerName=https://cas.ala-dev.vertigo.com.br
#security.cas.casServerUrlPrefix=https://cas.ala-dev.vertigo.com.br/cas
#security.cas.loginUrl=https://cas.ala-dev.vertigo.com.br/cas/login
security.cas.uriFilterPattern=/admin/search/reindex.*
#security.cas.logoutUrl=https://cas.ala-dev.vertigo.com.br/cas/logout
#security.cas.appServerName=https://profile-service.ala-dev.vertigo.com.br/profile-service
security.cas.bypass=true
disableCAS=false
#security.apikey.check.serviceUrl=https://apikey.ala-dev.vertigo.com.br/apikey/ws/check?apikey=
elasticSearch.client.mode=transport
elasticSearch.cluster.name=esprofiles
# webservice.apikey.includeApiKey=false
#grailsApplication.config.elasticSearch.url=http://esprofiles:9200
elasticSearch.url=http://esprofiles:9200
#elasticSearch.client.hosts="esprofiles:9300"
#elasticSearch.client.hosts=[[host: "esprofiles", port: 9300]]
# elasticSearch.client.hosts.host=esprofiles
# elasticSearch.client.hosts.port=9300
elasticSearch.bulkIndexOnStartup=true
#elasticSearch.client.host=esprofiles
#elasticSearch.client.port=9300

elasticSearch.client.datastoreImpl=mongoDatastore
elasticSearch.client.bulkIndexOnStartup=false

# security.apikey.check.serviceUrl={{ apikey_check_url }}
#security.apikey.ip.whitelist=

serverURL=http://localhost:8080
grails.serverURL=http://localhost:8080/profile-service
serverName=http://localhost:8080

grails.mongo.host=mongoprofiles
grails.mongo.port=27017
grails.mongo.databaseName=profiles

#userDetails.url=https://cas.ala-dev.vertigo.com.br/userdetails

#bie.base.url=https://ala-bie.ala-dev.vertigo.com.br/ala-bie/
collectory.base.url=https://collectory.ala-hml.vertigo.com.br/collectory/
#images.base.url=https://images.ala-dev.vertigo.com.br/images
# sandbox.base.url={{ sandbox_base_url }}
# avh.base.url={{ avh_base_url }}
#profile.hub.base.url=https://profile-hub.ala-dev.vertigo.com.br/profile-hub
#profile.service.apiKey=0c67635d-773d-4a64-88fc-5f77e6e60057
name.index.location=/data/lucene/namematching

nsl.name.instance.url.prefix=https://biodiversity.org.au/test-nsl/services/rest/instance/apni/
nsl.name.url.prefix=https://biodiversity.org.au/test-nsl/mapper/boa/name/apni/
nsl.service.url.prefix=https://biodiversity.org.au/test-nsl/services/rest/name/apni/
nsl.search.service.url.prefix=https://biodiversity.org.au/test-nsl/services/api/name/taxon-search.json
nsl.service.apni.concept.suffix=/api/apni-concepts.json
nsl.name.match.url.prefix=https://biodiversity.org.au/test-nsl/services/api/name/acceptable-name.json?name=
nsl.find.concept.service.suffix=/api/find-concept.json?term=
nsl.name.export.url=https://biodiversity.org.au/test-nsl/services/api/export/namesCsv

attachments.directory=/data/profile-service/attachments
snapshot.directory=/data/profile-service/snapshots
temp.file.directory=/data/profile-service/temp

# ands.doi.service.url=https://services.ands.org.au/doi/1.1/
# ands.doi.app.id={{ ands_doi_app_id }}
# ands.doi.key={{ ands_doi_key }}
# ands.doi.client.id={{ ands_doi_client_id }}
# doi.resolution.url.prefix={{ profile_hub_url }}/publication/

# analytics.serviceAccountEmail={{ analytics_serviceAccountEmail }}
# analytics.viewId={{ analytics_viewId }}
# analytics.p12.file=/data/profile-service/config/google_analytics_key.p12

# elasticSearch.cluster.name={{ elasticsearch_cluster_name }}

# <?xml version="1.0" encoding="UTF-8"?><sld:StyledLayerDescriptor xmlns="http://www.opengis.net/sld" xmlns:sld="http://www.opengis.net/sld" xmlns:gml="http://www.opengis.net/gml" xmlns:ogc="http://www.opengis.net/ogc" version="1.0.0">
